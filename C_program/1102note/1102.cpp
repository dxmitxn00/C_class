//<복습>
//
//-함수이름() : 메소드()
//함수() {
//	지역변수
//} --->함수의 바디, 몸통
//
//- 데이터 형
//int(정수형), char(문자), float(실수)
//
//- 서식지정자(키워드)
//% d(정수), % c(문자), % f(실수), % s(문자열)
//
//- 변수: 1. 지역변수 2. 전역변수
//
//- 상수
//
//#include<stdio.h>
//int main(void) {
//		statement;
//		statement;
//	}
//	ㄴ------->statement : 구문
//
//		------------------------------------------------------------------------------------------ -
//
//		13일 : 함수
//		14일 : 포인터
//		20일 : 배열 및 포인터
//		21일 : 함수, 포인터, 배열
//		27일 : 기타 입출력 함수 / 동적메모리 / 구조체
//		28일 : 프로그램 작성
//
//		--------------------------------------------------------------------------------------------
//		<조건문(if~else) / 반복문(for, while) / 제어문(break)>
//
//		-대입(op) 연산자 / 증감 연산자
//		+=, -=, *=, /=, %=, ++, --
//
//		& : 주소연산자->메모리 주소를 나타낼 수 있다.
//		ㄴ > 메모리 주소를 저장할 수 있는 변수는 유일하게 포인터 변수이다.
//
//		a++ : a를 선 실행 후 증가
//		++a : 선 증가 후 a 실행
//
//		<if문>
//		if (조건식) // 조건식이 참이어야 실행함
//			실행할 문장;
//
//	------------------------------------------------------------------------------------------ -
//
//		int main(void) {
//		int a;
//		printf("점수를 입력하세요 :");
//		scanf_s("%d", &a);
//
//		if (a >= 90)
//			printf("A");
//		else
//			if (a >= 80)
//				printf("B");
//			else
//				if (a >= 70)
//					printf("C");
//				else
//					printf("D");
//
//		return 0;
//	}
//
//	--------------------------------------------------------------------------------------------
//
//		<for문(반복문)>: while문과 형제
//		- for문 형태
//		for (초기값; 조건식; 증가값)
//
//			!!!!!!!!!변수선언할 땐 데이터형 필수!!!!!!!!!!!
//
//			int i; // 데이터형은 for문에 넣지 말고 밖으로 빼서 변수선언을 하는게 좋음(규칙)
//	for (i = 0; i < 7; i++) {
//		printf("처음배우는 C언어\n");
//	}
//
//
//	- while문 형태(for랑 같은 맥락인데 형태가 다름)
//		초기값
//		while (조건문) {
//			======> while (1) // true => 무한루프
//				증가값
//		}
//
//	------------->break가 무한루프 스탑시킴
//
//		--------------------------------------------------------------------------------------------
//		<함수>
//		-모든 함수를 이용하는 방법
//		1. int main(int a) {
//	} == = > (int a) : 매개변수(함수 뒤 괄호에 있는 변수)
//		2. int main(void) {
//		= 인수, 인자, args
//	}
//	3. void main(int a) {
//	}
//	4. void main(void) {
//	}
//
//	== = > int랑 void는 반환 타입(void : 반환 타입 없음, 반환할 필요없다)
//		== = > 함수의 매개변수가 존재한다는 의미는 외부(사용자 정의 함수)에서 값을 받아온다.
